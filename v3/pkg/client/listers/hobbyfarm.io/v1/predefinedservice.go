/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	hobbyfarmiov1 "github.com/hobbyfarm/gargantua/v3/pkg/apis/hobbyfarm.io/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PredefinedServiceLister helps list PredefinedServices.
// All objects returned here must be treated as read-only.
type PredefinedServiceLister interface {
	// List lists all PredefinedServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hobbyfarmiov1.PredefinedService, err error)
	// PredefinedServices returns an object that can list and get PredefinedServices.
	PredefinedServices(namespace string) PredefinedServiceNamespaceLister
	PredefinedServiceListerExpansion
}

// predefinedServiceLister implements the PredefinedServiceLister interface.
type predefinedServiceLister struct {
	listers.ResourceIndexer[*hobbyfarmiov1.PredefinedService]
}

// NewPredefinedServiceLister returns a new PredefinedServiceLister.
func NewPredefinedServiceLister(indexer cache.Indexer) PredefinedServiceLister {
	return &predefinedServiceLister{listers.New[*hobbyfarmiov1.PredefinedService](indexer, hobbyfarmiov1.Resource("predefinedservice"))}
}

// PredefinedServices returns an object that can list and get PredefinedServices.
func (s *predefinedServiceLister) PredefinedServices(namespace string) PredefinedServiceNamespaceLister {
	return predefinedServiceNamespaceLister{listers.NewNamespaced[*hobbyfarmiov1.PredefinedService](s.ResourceIndexer, namespace)}
}

// PredefinedServiceNamespaceLister helps list and get PredefinedServices.
// All objects returned here must be treated as read-only.
type PredefinedServiceNamespaceLister interface {
	// List lists all PredefinedServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hobbyfarmiov1.PredefinedService, err error)
	// Get retrieves the PredefinedService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*hobbyfarmiov1.PredefinedService, error)
	PredefinedServiceNamespaceListerExpansion
}

// predefinedServiceNamespaceLister implements the PredefinedServiceNamespaceLister
// interface.
type predefinedServiceNamespaceLister struct {
	listers.ResourceIndexer[*hobbyfarmiov1.PredefinedService]
}
