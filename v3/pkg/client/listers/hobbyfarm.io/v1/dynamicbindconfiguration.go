/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	hobbyfarmiov1 "github.com/hobbyfarm/gargantua/v3/pkg/apis/hobbyfarm.io/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// DynamicBindConfigurationLister helps list DynamicBindConfigurations.
// All objects returned here must be treated as read-only.
type DynamicBindConfigurationLister interface {
	// List lists all DynamicBindConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hobbyfarmiov1.DynamicBindConfiguration, err error)
	// DynamicBindConfigurations returns an object that can list and get DynamicBindConfigurations.
	DynamicBindConfigurations(namespace string) DynamicBindConfigurationNamespaceLister
	DynamicBindConfigurationListerExpansion
}

// dynamicBindConfigurationLister implements the DynamicBindConfigurationLister interface.
type dynamicBindConfigurationLister struct {
	listers.ResourceIndexer[*hobbyfarmiov1.DynamicBindConfiguration]
}

// NewDynamicBindConfigurationLister returns a new DynamicBindConfigurationLister.
func NewDynamicBindConfigurationLister(indexer cache.Indexer) DynamicBindConfigurationLister {
	return &dynamicBindConfigurationLister{listers.New[*hobbyfarmiov1.DynamicBindConfiguration](indexer, hobbyfarmiov1.Resource("dynamicbindconfiguration"))}
}

// DynamicBindConfigurations returns an object that can list and get DynamicBindConfigurations.
func (s *dynamicBindConfigurationLister) DynamicBindConfigurations(namespace string) DynamicBindConfigurationNamespaceLister {
	return dynamicBindConfigurationNamespaceLister{listers.NewNamespaced[*hobbyfarmiov1.DynamicBindConfiguration](s.ResourceIndexer, namespace)}
}

// DynamicBindConfigurationNamespaceLister helps list and get DynamicBindConfigurations.
// All objects returned here must be treated as read-only.
type DynamicBindConfigurationNamespaceLister interface {
	// List lists all DynamicBindConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hobbyfarmiov1.DynamicBindConfiguration, err error)
	// Get retrieves the DynamicBindConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*hobbyfarmiov1.DynamicBindConfiguration, error)
	DynamicBindConfigurationNamespaceListerExpansion
}

// dynamicBindConfigurationNamespaceLister implements the DynamicBindConfigurationNamespaceLister
// interface.
type dynamicBindConfigurationNamespaceLister struct {
	listers.ResourceIndexer[*hobbyfarmiov1.DynamicBindConfiguration]
}
