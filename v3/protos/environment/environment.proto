syntax = "proto3";

package environment;

option go_package = "github.com/hobbyfarm/gargantua/v3/protos/environment;environmentpb";

import "general/general.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service EnvironmentSvc {
    rpc CreateEnvironment (CreateEnvironmentRequest) returns (general.ResourceId);
    rpc GetEnvironment (general.GetRequest) returns (Environment);
    rpc UpdateEnvironment (UpdateEnvironmentRequest) returns (google.protobuf.Empty);
    rpc DeleteEnvironment (general.ResourceId) returns (google.protobuf.Empty);
    rpc DeleteCollectionEnvironment (general.ListOptions) returns (google.protobuf.Empty);
    rpc ListEnvironment (general.ListOptions) returns (ListEnvironmentsResponse);
}

message Environment {
    string id = 1;
    string uid = 2;
    string display_name = 3;
    string dnssuffix = 4;
    string provider = 5;
    map<string, general.StringMap> template_mapping = 6;
    map<string, string> environment_specifics = 7;
    map<string, string> ip_translation_map = 8;
    string ws_endpoint = 9;
    map<string, uint32> count_capacity = 10;
    map<string, string> annotations = 11;
}

message CreateEnvironmentRequest {
    string display_name = 1;
    string dnssuffix = 2;
    string provider = 3;
    string template_mapping = 4;
    string environment_specifics = 5;
    string ip_translation_map = 6;
    string ws_endpoint = 7;
    string count_capacity = 8;
}

message UpdateEnvironmentRequest {
    string id = 1;
    string display_name = 2;
    google.protobuf.StringValue dnssuffix = 3; // optional
    string provider = 4;
    string template_mapping = 5;
    string environment_specifics = 6;
    string ip_translation_map = 7;
    string ws_endpoint = 8;
    string count_capacity = 9;
}

message ListEnvironmentsResponse {
    repeated Environment environments = 1;
}